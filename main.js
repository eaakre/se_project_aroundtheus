!function(){"use strict";class t{constructor(t,e,s,i,r){let{name:n,link:o,_id:a,isLiked:l}=t;this._name=n,this._link=o,this._id=a,this._isLiked=l,this._cardSelector=e,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r}_getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0)}_setEventsListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,url:this._link})})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}handleDeleteCard=()=>{this._cardElement.remove(),this._cardElement=null};handleLikeIcon=()=>{this._likeButton.classList.toggle("cards__favorite_active")};getView(){return this._cardElement=this._getCardElement(),this._cardTitle=this._cardElement.querySelector(".cards__title"),this._cardImage=this._cardElement.querySelector(".cards__image"),this._likeButton=this._cardElement.querySelector(".cards__favorite"),this._deleteButton=this._cardElement.querySelector(".cards__delete-button"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventsListeners(),this._isLiked&&this._likeButton.classList.add("cards__favorite_active"),this._cardElement}}class e{constructor(t,e){let{data:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}addItem(t){this._container.prepend(t)}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach(this._renderer)}}class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close"))&&this.close()}))}}class i extends s{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".form__input"),this._handleFormSubmit=e,this._popupSubmit=this._popupElement.querySelector(".modal__button")}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setSubmitText(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=t?e:"Save"}setEventListeners(){this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){super.close(),this._popupForm.reset()}}class r{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t,e){const s=this._form.querySelector(`.${t.id}-error`);t.classList.add(this._inputErrorClass),s.textContent=e,s.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`.${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_toggleButtonState(){if(this._hasInvalidInput(this._inputList))return this.disableButton();this._enableButton()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputList.every((t=>t.validity.valid))}_checkValidity(t){if(!t.validity.valid)return this._showInputError(t,t.validationMessage);this._hideInputError(t)}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}const n={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},o=document.querySelector("#profile-edit-modal"),a=document.forms["edit-form"],l=document.forms["add-form"],c=document.querySelector(".profile__edit-button"),u=o.querySelector(".form__input_name"),h=o.querySelector(".form__input_description"),d=document.querySelector(".profile__add-button"),_=(document.querySelectorAll(".cards__delete-button"),document.querySelector(".profile__avatar"),document.querySelector(".profile__avatar-edit")),m=document.forms["update-avatar-form"];let p,b;function v(t){const e=E(t);p.addItem(e)}function f(t,e){I.open(t,e)}function S(t){t._isLiked?C.removeLikeCard(t._id).then((()=>{t.handleLikeIcon()})).catch((t=>{console.error(t)})):C.likeCard(t._id).then((()=>{t.handleLikeIcon()})).catch((t=>{console.error(t)}))}const E=e=>new t(e,"#cards__list-item",f,B,S).getView(),y=new class{constructor(t){let{userName:e,userAbout:s,userAvatar:i}=t;this._userName=document.querySelector(e),this._userAbout=document.querySelector(s),this._userAvatar=document.querySelector(i)}getUserInfo(){return{name:this._userName.textContent,about:this._userAbout.textContent}}setUserInfo(t){this._userName.textContent=t.name,this._userAbout.textContent=t.about}setUserAvatar(t,e){this._userAvatar.src=t,this._userAvatar.alt=e+" avatar"}}({userName:".profile__title",userAbout:".profile__description",userAvatar:".profile__avatar"}),C=new class{constructor(t){let{baseUrl:e,headers:s}=t;this._baseUrl=e,this._authorization=s.authorization,this._contentType=s["Content-Type"]}_checkResponse(t){if(t.ok)return t.json()}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:"a93ebd2f-fd06-499f-b2f9-74e2f8519709"}}).then(this._checkResponse)}getUser(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}updateProfile(t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:t.name,about:t.about}),headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}addCard(t,e){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:t,link:e}),headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}deleteCard(t){return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}likeCard(t){return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}removeLikeCard(t){return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}updateProfilePicture(t){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentType},body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a93ebd2f-fd06-499f-b2f9-74e2f8519709","Content-Type":"application/json"}});Promise.all([C.getUser(),C.getInitialCards()]).then((t=>{let[s,i]=t;y.setUserInfo({name:s.name,about:s.about}),y.setUserAvatar(s.avatar,s.name),p=new e({data:i,renderer:v},".cards__list",f,B,S),p.renderItems()})),new r(n,a).enableValidation();const L=new r(n,l);L.enableValidation(),new r(n,m).enableValidation();const k=new i("#profile-edit-modal",(t=>{k.setSubmitText(!0),console.log(t),C.updateProfile(t).then((t=>{y.setUserInfo(t),k.close()})).finally((()=>k.setSubmitText(!1)))}));k.setEventListeners(),c.addEventListener("click",(()=>{k.open();const t=y.getUserInfo();u.value=t.name,h.value=t.about;let e={name:u.value,about:h.value};y.setUserInfo(e)}));const g=new i("#profile-add-modal",(t=>{let{title:e,image:s}=t;g.setSubmitText(!0),C.addCard(e,s).then((t=>{b=E({name:t.name,link:t.link}),p.addItem(b)})).catch((t=>console.log(t))).finally((()=>g.setSubmitText(!1)))}));g.setEventListeners(),d.addEventListener("click",(()=>{L.disableButton(),g.open()}));const T=new i("#update-avatar-modal",(t=>{T.setSubmitText(!0),C.updateProfilePicture(t.image).then((t=>{y.setUserAvatar(t.avatar),T.close()})).catch((t=>console.log(t))).finally((()=>T.setSubmitText(!1)))}));T.setEventListeners(),_.addEventListener("click",(()=>{L.disableButton(),T.open()}));const I=new class extends s{constructor(t){super({popupSelector:t}),this._cardImage=document.querySelector(".modal__image"),this._cardTitle=document.querySelector(".modal__title"),this._popupSubmit=this._popupElement.querySelector(".modal__button")}open(t){this._cardImage.src=t.url,this._cardTitle.textContent=t.title,this._cardImage.alt=t.title,super.open()}}("#card-modal");I.setEventListeners();const q=new class extends s{constructor(t){super({popupSelector:t}),this._popupConfirm=this._popupElement.querySelector(".modal__form"),this._popupSubmit=this._popupElement.querySelector(".modal__button")}setEventListeners(){this._popupConfirm.addEventListener("submit",(t=>{t.preventDefault(),this._handleSubmit()})),super.setEventListeners()}setSubmitText(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=t?e:"Yes"}setSubmitAction(t){this._handleSubmit=t}}("#delete-card-modal");function B(t){q.open(),q.setSubmitAction((()=>{q.setSubmitText(!0,"Deleting..."),C.deleteCard(t._id).then((()=>{q.close(),t.handleDeleteCard()})).catch((t=>console.error(t))).finally((()=>q.setSubmitText(!1)))}))}q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,