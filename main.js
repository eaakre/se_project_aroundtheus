!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this._isLiked=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r}_getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0)}_setEventsListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick({title:this._name,url:this._link})})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}handleDeleteCard=()=>{this._cardElement.remove(),this._cardElement=null};handleLikeIcon=()=>{this._likeButton.classList.toggle("cards__favorite_active")};getView(){return this._cardElement=this._getCardElement(),this._cardTitle=this._cardElement.querySelector(".cards__title"),this._cardImage=this._cardElement.querySelector(".cards__image"),this._likeButton=this._cardElement.querySelector(".cards__favorite"),this._deleteButton=this._cardElement.querySelector(".cards__delete-button"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventsListeners(),this._isLiked&&this._likeButton.classList.add("cards__favorite_active"),this._cardElement}}class t{constructor(e,t){let{data:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}clear(){this._container.innerHTML=""}renderItems(){this.clear(),this._items.forEach(this._renderer)}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".form__input"),this._handleFormSubmit=t,this._popupSubmit=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Save"}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){super.close(),this._popupForm.reset()}}class r{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e,t){const s=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){if(this._hasInvalidInput(this._inputList))return this.disableButton();this._enableButton()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_checkValidity(e){if(!e.validity.valid)return this._showInputError(e,e.validationMessage);this._hideInputError(e)}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const n={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},o=document.querySelector("#profile-edit-modal"),a=document.forms["edit-form"],l=document.forms["add-form"],c=document.querySelector(".profile__edit-button"),h=o.querySelector(".form__input_name"),u=o.querySelector(".form__input_description"),d=document.querySelector(".profile__add-button"),_=(document.querySelectorAll(".cards__delete-button"),document.querySelector(".profile__avatar")),m=document.querySelector(".profile__avatar-edit");let p,v;function f(e){const t=S(e);p.addItem(t)}function b(e,t){I.open(e,t)}const S=t=>new e(t,"#cards__list-item",b,B,U).getView(),E=new class{constructor(e){let{userName:t,userJob:s,userAvatar:i}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s),this._userAvatar=document.querySelector(i)}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.description}setUserAvatar(e){this._userAvatar.src=e}}({userName:".profile__title",userJob:".profile__description",userAvatar:".profile__avatar"}),y=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._authorization=s.authorization,this._contentType=s["Content-Type"]}_checkResponse(e){if(e.ok)return e.json()}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:"a93ebd2f-fd06-499f-b2f9-74e2f8519709"}}).then(this._checkResponse)}getUser(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}updateProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:e.name,about:e.description}),headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}addCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:e,link:t}),headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}removeLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":this._contentType}}).then(this._checkResponse)}updateProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":this._contentType},body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a93ebd2f-fd06-499f-b2f9-74e2f8519709","Content-Type":"application/json"}});y.getUser().then((e=>{E.setUserInfo({name:e.name,description:e.about}),_.src=e.avatar,_.alt=e.name+" avatar"})),y.getInitialCards().then((e=>{p=new t({data:e,renderer:f},".cards__list",b,B,U),p.renderItems()}));const C=new r(n,a),L=new r(n,l);L.enableValidation(),C.enableValidation();const k=new i("#profile-edit-modal",(function(e){y.updateProfile({name:e.title,description:e.description}).then(y.getUser().then((e=>{E.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})}))),k.close()}));k.setEventListeners(),c.addEventListener("click",(()=>{k.open();const e=E.getUserInfo();h.value=e.name,u.value=e.job;let t={name:h.value,description:u.value};E.setUserInfo(t)}));const g=new i("#profile-add-modal",(e=>{let{title:t,image:s}=e;g.setSubmitText(!0),y.addCard(t,s).then((e=>{v=S({name:e.name,link:e.link}),p.addItem(v)})).catch((e=>console.log(e))).finally((()=>g.setSubmitText(!1)))}));g.setEventListeners(),d.addEventListener("click",(()=>{L.disableButton(),g.open()}));const T=new i("#update-avatar-modal",(e=>{T.setSubmitText(!0),y.updateProfilePicture(e.image).then((e=>{E.setUserAvatar(e.avatar),T.close()})).catch((e=>console.log(e))).finally((()=>T.setSubmitText(!1)))}));T.setEventListeners(),m.addEventListener("click",(()=>{L.disableButton(),T.open()}));const I=new class extends s{constructor(e){super({popupSelector:e}),this._cardImage=document.querySelector(".modal__image"),this._cardTitle=document.querySelector(".modal__title"),this._popupSubmit=this._popupElement.querySelector(".modal__button")}open(e){this._cardImage.src=e.url,this._cardTitle.textContent=e.title,this._cardImage.alt=e.title,super.open()}}("#card-modal");I.setEventListeners();const q=new class extends s{constructor(e){super({popupSelector:e}),this._popupConfirm=this._popupElement.querySelector(".modal__form"),this._popupSubmit=this._popupElement.querySelector(".modal__button")}setEventListeners(){this._popupConfirm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()})),super.setEventListeners()}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Yes"}setSubmitAction(e){this._handleSubmit=e}}("#delete-card-modal");function B(e){q.open(),q.setSubmitAction((()=>{q.setSubmitText(!0,"Deleting..."),y.deleteCard(e._id).then((()=>{q.close(),e.handleDeleteCard()})).catch((e=>console.error(e))).finally((()=>q.setSubmitText(!1)))}))}function U(e){e._isLiked?y.removeLikeCard(e._id).then((()=>{e.handleLikeIcon()})).catch((e=>{console.error(e)})):y.likeCard(e._id).then((()=>{e.handleLikeIcon()})).catch((e=>{console.error(e)}))}q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,